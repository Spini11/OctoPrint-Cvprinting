<div id="cvprinting_settings" style="max-width: 800px; margin: 0 auto; font-family: Arial, sans-serif;">
    <div class="WebcamPreview" style="text-align: center; margin-bottom: 20px;">
        <label class="webcamPreviewLabel" style="display: block; margin-bottom: 10px; font-weight: bold;">Webcam Preview</label>
        <img id="videoStream"
            data-bind="attr: {src: currentStream}"
            alt="Webcam preview" 
            style="max-width: 90%; max-height: 80vh; width: auto; height: auto; border: 1px solid #ccc; border-radius: 8px;">
    </div>

    <label class="settingsLabel" style="font-weight: bold; font-size: 1.2em; display: block; margin-bottom: 15px;">Settings</label>
    <form class="form-horizontal" style="display: flex; flex-direction: column; gap: 20px;">
        <div class="control-group">
            <label class="PauseIssueSettingsLabel" style="display: block; margin-bottom: 5px;">Pause print when issue is detected</label>
            <input type="checkbox" id="pause_on_issue" data-bind="checked: pauseOnError">
        </div>

        <div class="control-group">
            <label for="confidence_level" class="ConfidenceLevelSettingsLabel" style="display: block; margin-bottom: 5px;">Minimal confidence to pause a print? (If pause enabled)</label>
            <div style="display: flex; align-items: center; gap: 10px;">
                <input 
                    type="range" 
                    id="confidence_level" 
                    min="0" 
                    max="100" 
                    step="1" 
                    data-bind="value: pauseThreshold" 
                    oninput="this.nextElementSibling.value = this.value">
                <output style="width: 40px; text-align: left;" data-bind="text: pauseThreshold"></output>
            </div>
        </div>

        <div class="control-group">
            <label for="warning_level" class="WarningLevelSettingsLabel" style="display: block; margin-bottom: 5px;">Minimal confidence to send a notification?</label>
            <div style="display: flex; align-items: center; gap: 10px;">
                <input 
                    type="range" 
                    id="warning_level" 
                    min="0" 
                    max="100" 
                    step="1" 
                    data-bind="value: warningThreshold" 
                    oninput="this.nextElementSibling.value = this.value">
                <output style="width: 40px; text-align: left;" data-bind="text: warningThreshold"></output>
            </div>
        </div>

        <div class="control-group" style="display: flex; align-items: center; gap: 10px;">
            <label for="selectedWebcam" class="WebcamProfileLabel" style="flex: 1;">Choose webcam profile</label>
            <select 
                id="selectedWebcam" 
                style="flex: 2; max-width: 300px; padding: 5px; border: 1px solid #ccc; border-radius: 4px;" 
                data-bind="value: selectedWebcam">
                <option value="classic">Classic</option>
                <option value="cvprinting">Custom</option>
            </select>
        </div>
        <div id="cvprintingCam_settings" style="display: none;">
            <!--Cvprinting snapshot-->
            <div class="control-group" style="display: flex; align-items: center; gap: 10px;">
                <label for="cvprintingSnapshotUrl" class="SnapshotUrlSettingsLabel" style="flex: 1;">Snapshot URL</label>
                <input 
                    type="text" 
                    id="cvprintingSnapshotUrl" 
                    style="flex: 2; max-width: 300px; padding: 5px; border: 1px solid #ccc; border-radius: 4px;" 
                    data-bind="value: cvprintingSnapshotUrl">
            </div>

            <!--Cvprinting stream-->
            <div id="cvprinting" class="control-group" style="display: flex; align-items: center; gap: 10px;">
                <label for="cvprintingStreamUrl" class="StreamUrlSettingsLabel" style="flex: 1;">Stream URL</label>
                <input 
                    type="text" 
                    id="cvprintingStreamUrl" 
                    style="flex: 2; max-width: 300px; padding: 5px; border: 1px solid #ccc; border-radius: 4px;" 
                    data-bind="value: cvprintingStreamUrl">
            </div>
        </div>
        
        <div id="classicCam_settings">

            <!--Classic snapshot-->
            <div class="control-group" style="display: flex; align-items: center; gap: 10px;">
                <label for="classicSnapshotUrl" class="SnapshotUrlSettingsLabel" style="flex: 1;">Snapshot URL</label>
                <input 
                    type="text" 
                    id="classicSnapshotUrl" 
                    readonly 
                    style="flex: 2; max-width: 300px; padding: 5px; border: 1px solid #ccc; border-radius: 4px;" 
                    data-bind="value: classicSnapshotUrl">
            </div>

            <!--Classic stream-->
            <div class="control-group" style="display: flex; align-items: center; gap: 10px;">
                <label for="classicStreamUrl" class="StreamUrlSettingsLabel" style="flex: 1;">Stream URL</label>
                <input 
                    type="text" 
                    id="classicStreamUrl" 
                    readonly 
                    style="flex: 2; max-width: 300px; padding: 5px; border: 1px solid #ccc; border-radius: 4px;" 
                    data-bind="value: classicStreamUrl">
            </div>

        </div>

        <label class="notificationsLabel" style="font-weight: bold; font-size: 1.1em; display: block; margin-top: 20px;">Notifications</label>
        <label class="notificationsLabel" style="font-weight: bold; font-size: 1em; display: block; margin-top: 20px;">Discord</label>
        <div class="control-group" style="display: flex; align-items: center; gap: 10px;">
            <input 
                type="checkbox" 
                id="discord_enabled" 
                data-bind="checked: discordEnabled, enable: webhookUrl()" 
                style="margin-right: 10px;">
            <label for="discord_enabled" class="DiscordEnabledLabel">Enable Discord Notifications</label>
        </div>

        <div class="control-group" style="display: flex; align-items: center; gap: 10px;">
            <label for="WebhookUrl" class="WebhookUrlSettingsLabel" style="flex: 1;">Webhook URL</label>
            <input 
                type="text" 
                id="WebhookUrl" 
                style="flex: 2; max-width: 300px; padding: 5px; border: 1px solid #ccc; border-radius: 4px;" 
                data-bind="value: webhookUrl">
        </div>
        <div class="control-group" style="display: flex; flex-direction: column; align-items: flex-start; gap: 5px; margin-top: 10px;">
            <button type="button" id="discord_test" 
                style="padding: 5px 10px;" 
                data-bind="click: sendDiscordTest, enable: webhookUrl()">
                Send Test Notification to Discord
            </button>
            <p style="color: red; font-size: 0.9em;" data-bind="visible: discordTestNotificationError, text: discordTestNotificationMessage"></p>
            <p style="color: green; font-size: 0.9em;" data-bind="visible: discordTestNotificationMessageShow, text: discordTestNotificationMessage"></p>
        </div>
                
        <label class="notificationsLabel" style="font-weight: bold; font-size: 1em; display: block; margin-top: 20px;">Telegram</label>
        <div class="control-group" style="display: flex; align-items: center; gap: 10px;">
            <input 
                type="checkbox" 
                id="telegram_enabled" 
                data-bind="checked: telegramEnabled, enable: telegramToken() && (telegramChatId() || telegramChatIdFieldValue())"
                style="margin-right: 10px;">
            <label for="telegram_enabled" class="TelegramEnabledLabel">Enable Telegram Notifications</label>
        </div>
        <div class="control-group" style="display: flex; align-items: center; gap: 10px;">
            <label for="telegramToken" class="TelegramTokenLabel" style="flex: 1;">Bot Token</label>
            <input type="text" id="telegramToken" style="flex: 2; max-width: 300px; padding: 5px; border: 1px solid #ccc; border-radius: 4px;" data-bind="value: telegramToken, disable: telegramConnecting">
            <button type="button" style="padding: 5px 10px;" data-bind="click: connectBot, visible: !telegramConnecting()">Connect</button>
            <button type="button" style="padding: 5px 10px;" data-bind="click: stopConnecting, visible: telegramConnecting">Cancel (All found chats will be dropped)</button>
        </div>
        
<p style="color: red; font-size: 0.9em; margin-top: 5px;" data-bind="visible: telegramConnectionUnauthorized">The inputted token is not valid. Check if it's correct and try again.</p>
<p style="color: red; font-size: 0.9em; margin-top: -10px;" data-bind="visible: telegramConnectionError">There was an error connecting to Telegram. Try again.</p>
<p style="color: red; font-size: 0.9em; margin-top: -10px;" data-bind="visible: telegramTokenChangedOnConnecting">The token was changed during connection attempt. Try again.</p>
<p style="font-size: 0.9em; margin-top: -10px;" data-bind="visible: telegramTimeOutResults">60 seconds for sending a message have passed, if you don't see your account between available option, click on Connect and try again.</p>
<p style="color: red; font-size: 0.9em; margin-top: -10px;" data-bind="visible: telegramTimeOutNoResults">60 seconds for sending a message have passed, but no message was received, click on Connect and try again.</p>

        <p style="margin-top: 10px; font-size: 0.9em; font-weight: bold;" data-bind="visible: telegramConnected">Currently selected chat ID</p>
<input type="text" id="selectedChatId" style="flex: 2; max-width: 300px; padding: 5px; border: 1px solid #ccc; border-radius: 4px; background-color: #f0f0f0;" data-bind="value: telegramChatId, visible: telegramConnected" readonly>
        <p style="margin-top: -10px; font-size: 0.9em;" data-bind="visible: telegramConnecting">Send a message to the bot within next 60 seconds to get chat ID</p>
        <div id="telegramConnection" class="control-group" style="display: flex; align-items: center; gap: 10px;" data-bind="visible: telegramConnecting() || telegramShowFoundChats()">
            <label for="telegramChatIdLabel" class="TelegramChatIdLabel" style="flex: 1;">Chat ID</label>
            <select id="telegramChatIdField" style="flex: 2; max-width: 300px; padding: 5px; border: 1px solid #ccc; border-radius: 4px;" data-bind="value: telegramChatIdFieldValue"></select>
        </div>
        <div class="control-group" style="display: flex; flex-direction: column; align-items: flex-start; gap: 5px; margin-top: 10px;">
            <button type="button" id="telegram_test" 
                style="padding: 5px 10px;" 
                data-bind="click: sendTelegramTest, enable: telegramToken() && (telegramChatId() || telegramChatIdFieldValue())">
                Send Test Notification to Telegram
            </button>
            <p style="color: red; font-size: 0.9em;" data-bind="visible: telegramTestNotificationError, text: telegramTestNotificationMessage"></p>
            <p style="color: green; font-size: 0.9em;" data-bind="visible: telegramTestNotificationMessageShow, text: telegramTestNotificationMessage"></p>
        </div>
    </form>
</div>
